import("stdfaust.lib");
import("maxmsp.lib");

// IIR hilbert transform Emmanuel Favreau (via Miller Puckette)
// fastest
hilbertef(x) = real(x), imag(x)
with {
  biquad(a1,a2,b0,b1,b2) = + ~ conv2(a1,a2) : conv3(b0,b1,b2) 
  with {
    conv3(k0,k1,k2,x) = k0*x + k1*x' + k2*x'';
    conv2(k0,k1,x) = k0*x + k1*x';
  };
  real = biquad(-0.02569, 0.260502, -0.260502, 0.02569, 1) 
        : biquad(1.8685, -0.870686, 0.870686, -1.8685, 1) ;
  imag = biquad(1.94632, -0.94657, 0.94657, -1.94632, 1) 
      : biquad(0.83774, -0.06338, 0.06338,  -0.83774, 1) ;
};

// IIR hilbert transform from Sean Costello
// seems to have better side band attenuation. matches max msp hilbert
hilbertsc48(x) = real(x), imag(x)
with {
  real =  biquad(_, -0.13271854817867279053, -0.86594426631927490234, 1., -0.86594426631927490234, -0.13271854817867279053)
        : biquad(_, 0.54082983732223510742, -1.53677272796630859375, 1., -1.53677272796630859375, 0.54082983732223510742)
        : biquad(_, 0.83256042003631591797, -1.82766675949096679688, 1., -1.82766675949096679688, 0.83256042003631591797);
  imag =  biquad(_, -0.63589376211166381836, -0.35740464925765991211, 1., -0.35740464925765991211, -0.63589376211166381836)
        : biquad(_, 0.24787813425064086914, -1.23438167572021484375, 1., -1.23438167572021484375, 0.24787813425064086914)
        : biquad(_, 0.69171458482742309570, -1.67367196083068847656, 1., -1.67367196083068847656, 0.69171458482742309570);
};

freqshift(x, shift) = negative(x), positive(x)
with {
  negative(x) = real(x)*cosv - imag(x)*sinv;
  positive(x) = real(x)*cosv + imag(x)*sinv;
  real(x) = hilbert(x) : _ , !;
  imag(x) = hilbert(x) : ! , _;
  sinv = os.oscrq(shift) : _ , !;
  cosv = os.oscrq(shift) : ! , _;
  hilbert = hilbertsc48;
};

ssb(shift, x) = freqshift(x, shift) : _ , !; // only take one sideband